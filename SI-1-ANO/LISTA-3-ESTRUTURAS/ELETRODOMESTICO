# include  < stdio.h >
# include  < stdlib.h >
# inclui  < string.h >

typedef  struct {
	char nome[ 50 ];
	float potência, tempo;
}elétrico;

int qtd = 0 ;

void  addEletro (eletro e[]){
	
	printf ( " Nome: " );
	fflush (stdin);
	get (e[qtd]. nome );
	
	printf ( " Potência em Watts: " );
	scanf ( " %f " , &e[qtd]. potencia );
	
	printf ( " Tempo médio ativo por dia: " );
	scanf ( " %f " , &e[qtd]. tempo );
	
	printf ( " \n Eletrodoméstico cadastrado com sucesso! :) " );
	
	qtd++;
}

void  listaEletro (eletro e[]){
	int i, j = - 1 ;
	
	for (i = 0 ; i < qtd; i++){
		printf ( " \n -- Eletro %2d -- \n " , i+ 1 );
		printf ( " Nome: %s \n " , e[i]. nome );
		printf ( " Potência: %.1f W \n " , e[i]. potencia );
		printf ( " Tempo Ativo(dia): %.1f h \n " , e[i]. tempo );
		j = 1 ;
	}
	
	se (j == - 1 )
		printf ( " \n Nenhum Eletrodoméstico cadastrado! " );

}

void  buscaEletro (eletro e[]){
	int i, j = - 1 ;
	char busca[ 50 ], aux[ 50 ];
	
		printf ( " Informe o nome: " );
		fflush (stdin);
		pega (busca);
		strlwr (busca);
		
		for (i = 0 ; i < qtd; i++){
			strcpy (aux, e[i]. nome );
			strlwr (aux);
			
			if ( strcmp (aux, busca) == 0 ){
				printf ( " \n -- Eletro %2d -- \n " , i+ 1 );
				printf ( " Nome: %s \n " , e[i]. nome );
				printf ( " Potência: %.1f W \n " , e[i]. potencia );
				printf ( " Tempo Ativo(dia): %.1f h \n " , e[i]. tempo );
				j = 1 ;
				quebrar ;
			}
		}

	
	se (j == - 1 )
		printf ( " Eletrodoméstico Não Encontrado! " );

}

void  filtroEletro (eletro e[], float valor, float busca){
	int i, j = - 1 ;
	flutuar gasto;
	
	for (i = 0 ; i < qtd; i++){
		gasto = ((e[i]. potência * e[i]. tempo * 1 )/ 1000 )*valor;
		  if (gasto* 30 >= busca){
			printf ( " \n -- Eletro %2d -- \n " , i+ 1 );
			printf ( " Nome: %s \n " , e[i]. nome );
			printf ( " Potência: %.1f W \n " , e[i]. potencia );
			printf ( " Tempo Ativo(dia): %.1f h \n " , e[i]. tempo );
			printf ( " O %s gasta R$ %.1f por mes ou R$ %.1f por dia! \n " , e[i]. nome , gasto* 30 , gasto);
			j = 1 ;
		}
	}
	se (j == - 1 )
		printf ( " \n Nenhum Eletrodomestico com gasto superior a R$ %.1f por mes! " , busca);
}

void  gastosEletro (eletro e[], float kwh){
	int eu;
	flutuar res;
	

	para (i = 0 ; i < qtd; i++)
		res += (e[i]. potência * e[i]. tempo * 1 )/ 1000 ;



	printf ( " Diário: %.1f kH/h | R$ %.1f \n " , res, res*kwh);
	printf ( " Mensal: %.1f kH/h | R$ %.1f " , res* 30 , (res*kwh)* 30 );
	
}

 menu int (){
	operação int ;
	
	printf ( " *** Sistema Eletro *** \n\n " );
	printf ( " 1- Cadastrar \n " );
	printf ( " 2- Listar Eletrodomesticos \n " );
	printf ( " 3- Busca Eletrodoméstico \n " );
	printf ( " 4-Filtro R$ \n " );
	printf ( " 5- Gastos \n " );
	printf ( " 0- Sair \n " );
	printf ( " Digite uma opção: " );
	scanf ( " %d " , &op);
	printf ( " \n " );
	
	operação de retorno ;
}

void  salvaArq (eletro e[]){
	ARQUIVO *arq;
	int i = 0 ;
	arq = fopen ( " dadosEletro.txt " , " wb " );
	fwrite (&e[i], sizeof (e), qtd, arq);
	printf ( " Dados salvos com sucesso \n " );
	fclose (arq);
}
	
void  carregaArq (eletro e[]){
	ARQUIVO *arq;
	arq = fopen ( " dadosEletro.txt " , " rb " );
	if (arq == NULL ){
		printf ( " Arquivo não encontrado :( \n " );
		retorno ;
	}
	while ( fread (&e[qtd], sizeof (eletro), 1 , arq) > 0 )
		qtd++;
		
	printf ( " Dados médicos com sucesso! \n " );
	fclose (arq);
}

int  principal (){
	
	int i, op;
	char aux[ 30 ];
	float kwh, busca;
	
	eletro eletrodom[ 100 ];
	
	printf ( " Deseja carregar dados de um arquivo?(1- Sim | 2- Nao): " );
	scanf ( " %d " , &op);
	se (op == 1 )
		carregaArq (eletrodom);
	senão  se (op != 2 )
		printf ( " \n Opção Inválida, reinicie o app! " );
		
	pegue ();
	sistema ( " cls " );
	
	fazer {
		op = menu ();
		interruptor (op){
			caso  1 :
				printf ( " Cadastro: \n " );
				addEletro (eletrodom);
				quebrar ;
				
			caso  2 :
				printf ( " Lista de Eletrodomesticos: \n " );
				listaEletro (eletrodom);
				quebrar ;
				
			caso  3 :
				printf ( " Busca Eletrodomesticos: \n " );
				buscaEletro (eletrodom);
				quebrar ;
			
			caso  4 :
				printf ( " Filtro R$: \n " );
				printf ( " Informe o valor do kW/h: " );
				scanf ( " %f " , &kwh);
				printf ( " \n Informe o valor do Filtro(R$ por mes): " );
				scanf ( " %f " , &busca);
				filtroEletro (eletrodom, kwh, busca);
				quebrar ;	
				
			caso  5 :
				printf ( " Gastos: \n " );
				printf ( " Informe o valor do kW/h: " );
				scanf ( " %f " , &kwh);
				gastosEletro (eletrodom, kwh);
				quebrar ;
							
			caso  0 :
				printf ( " Saindo... \n " );
				salvaArq (eletrodom);
				quebrar ;
				
			padrão :
				printf ( " \n Opção inválida! " );
				quebrar ;		
		}
		pegue ();
		sistema ( " cls " );
	} while (op != 0 );
}
