#include<stdio.h>
#include<stdlib.h>
#include<string.h>

typedef  struct {
	 char nome[50];
	 int matricula, not1, not2, not3;
}alunos;   
int qtd = 0 ;

void  addAluno (alunos a[]){
	
	 printf (" Nome do [ALUNO]: ");   
	 fflush (stdin);
	 get(a[qtd].nome);
	
	printf (" Matrícula do [ALUNO]: ");
	scanf (" %d ", &a[qtd].matricula);
	
	printf (" Nota Prova [01]: ");
	scanf ( " %d ", &a[qtd].not1);
	
	printf (" Nota Prova [02]: ");
	scanf (" %d ", &a[qtd].not2);
	
	printf (" Nota Prova [03]: ");
	scanf (" %d ", &a[qtd].not3);
	
	printf ("\n Aluno cadastrado com sucesso!)");
	
	qtd++;
}
void  listaAlunos (alunos a[]){
	int i, j = - 1 ;
	float med = 0.0 , maior;
	for (i = 0 ; i < qtd; i++){
		printf ( " -- Aluno %2d -- \n " , i+ 1 );
		printf ( " Nome: %s \n " , a[i]. nome );
		printf ( " Matrícula: %d \n " , a[i].matricula );
		printf ( " Nota Provas: %2d | %2d | %2d \n " , a[i].not1 , a[i].not2 , a[i].not3 );
		med = (a[i].not1 + a[i].not2 + a[i].not3 )/ 3 ;
		printf ( " Mídia: %.2f \n " , med);
		
		if (i == 0 )
			maior = medio;
		else {
			if (medio > maior){
				maior = medio;
				j = eu;
			}
		}
		
		if (med >= 6 )
			printf ( "Aluno Aprovado!\n " );
		else
			printf ( "Aluno Reprovado!\n " );
		printf (" x-----------------------------x \n \n ");
	}
	
	if (j == - 1 )
		printf ("\nAluno [NAO] cadastrado!");
	else
		printf ("Aluno com maior media e ou(A)%s, com %.2f de media! \n" , a[j].nome, maior);
}
void  buscaAluno (alunos a[], int op){
	int i, j = - 1 , mat;
	char aux[ 50 ], busca[ 50 ];	
	if (op == 1 ){
		printf ("Digite o nome:");
		fflush (stdin);
		pega (busca);
		strlwr (busca);
		
		for (i = 0 ; i < qtd; i++){
			strcpy (aux, a[i].nome);
			strlwr (aux);
			
			if ( strcmp (aux, busca) == 0 ){
				printf (" \n --x-- Aluno %2d --x-- \n",i+ 1);
				printf (" Nome: %s \n",a[i].nome );
				printf (" Matrícula: %d \n" , a[i].matricula );
				printf (" Nota Provas: %2d | %2d | %2d \n", a[i].not1 , a[i].not2 , a[i].not3 );
				med = (a[i].not1 + a[i].not2 + a[i].not3 )/ 3 ;
				printf (" Mídia: %.2f \n",med);
				
				if (med >= 6 )
					printf ("Aluno [APROVADO]!\n");
				else
					printf ("Aluno [REPROVADO]!\n");
					
				j = 1 ;
				break ;
			}
		}
	} if else (op == 2 ){
		printf ("Digite a [MATRICULA]:");
		scanf ("%d", &mat);
		
		for (i = 0 ; i < qtd; i++){
			if (mat == a[i]. matricula )
				printf ("\n --x-- Aluno %2d --x-- \n", i+ 1 );
				printf (" Nome: %s \n" , a[i].nome );
				printf (" Matricula:%d \n=", a[i].matricula );
				printf (" Nota [PROVA]: %2d | %2d | %2d \n" , a[i].not1 , a[i].not2 , a[i].not3 );
				med = (a[i].not1 + a[i].not2 + a[i].not3 )/ 3 ;
				printf ( "Media:%.2f \n " ,med);
								
				if (med >= 6 )
					printf ("Aluno [APROVADO]!\n");
				else
					printf ("Aluno [REPROVADO]!\n");
					
				j = 1 ;
				quebrar ;
		}
	} else
		printf ( "[!] INVALIDO" );
	
	if (j == - 1 )
		printf ("--x-- ALUNO [NAO ENCONTRAO] --x--");

}

 menu int (){
	int ;
	
	printf ( " *** Sistema Alunos *** \n\n " );
	printf ( " 1- Cadastrar \n " );
	printf ( " 2- Listar Alunos \n " );
	printf ( " 3- Busca Aluno \n " );
	printf ( " 0- Sair \n " );
	printf ( " Digite uma opção: " );
	scanf ( " %d " , &op);
	printf ( " \n " );
	
	return 0;
}

void  salvaArq (alunos a[]){
	ARQUIVO *arq;
	int i = 0 ;
	arq = fopen ("dadosAlunos.txt","wb");
	fwrite (&a[i], sizeof (a), qtd, arq);
	printf ("[SUCESS] DADOS CADASTRO");
	fclose (arq);
}
	
void  carregaArq (alunos a[]){
	ARQUIVO *arq;
	arq = fopen ("dadosAlunos.txt","rb");
	if (arq == NULL ){
		printf ("[NOT FULL] DADOS NAO ENCONTRADOS!\n");
		return 0; ;
	}
	while ( fread (&a[qtd], sizeof (alunos), 1 , arq) > 0 )
		qtd++;
		
	printf ("Dados médicos cadastrados!\n");
	fclose (arq);
}
int  principal (){
	int i, op;
	char aux[ 30 ];
	
	alunos aluno[ 100 ];
	
	printf ("DESEJA CARREGAR DADOS DE ALGUM [ARQUIVO]? \n [1- Sim | 2- Nao]:");
	scanf ("%d",&op);
	if (op == 1 )
		carregaArq (aluno);
	else  se (op != 2 )
		printf ("\n [OPÇÃO INVALIDA]");
		
	sistema ("cls");
	
	switch {
		op = menu ();
		int (op){
			case 1 :
				printf(" Cadastro: \n ");
				addAluno(aluno);
				break ;
				
			case  2 :
				printf("Lista de alunos:\n");
				listaAlunos(aluno);
				break ;
				
			case  3 :
				printf(" Busca aluno: \n");
				printf(" Deseja realizar a busca por nome ou matrícula(1- Nome | 2- Matrícula):");
				scanf (" %d " , &i);
				busca Aluno(aluno, i);
				break ;
				
			case  0 :
				printf(" Saindo... \n ");
				salvaArq(aluno);
				break ;
				
			else:
				printf("\n Opção inválida!");
				break;		
		}
		pegue ();
		sistema ( " cls " );
	} while (op != 0 );
}
